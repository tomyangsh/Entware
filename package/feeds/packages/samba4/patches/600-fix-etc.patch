--- a/nsswitch/pam_winbind.h
+++ b/nsswitch/pam_winbind.h
@@ -64,7 +64,7 @@
 #define PAM_SM_SESSION
 
 #ifndef PAM_WINBIND_CONFIG_FILE
-#define PAM_WINBIND_CONFIG_FILE "/etc/security/pam_winbind.conf"
+#define PAM_WINBIND_CONFIG_FILE "/opt/etc/security/pam_winbind.conf"
 #endif
 
 #ifdef HAVE_LIBINTL_H
--- a/source3/include/printing.h
+++ b/source3/include/printing.h
@@ -157,7 +157,7 @@ extern struct printif	iprint_printif;
 #endif
 
 #ifndef PRINTCAP_NAME
-#define PRINTCAP_NAME "/etc/printcap"
+#define PRINTCAP_NAME "/opt/etc/printcap"
 #endif
 
 /* There can be this many printing tdb's open, plus any locked ones. */
--- a/source3/libads/kerberos.c
+++ b/source3/libads/kerberos.c
@@ -753,7 +753,7 @@ bool create_local_private_krb5_conf_for_
 
 #if !defined(SAMBA4_USES_HEIMDAL)
 	if (lp_include_system_krb5_conf()) {
-		include_system_krb5 = "include /etc/krb5.conf";
+		include_system_krb5 = "include /opt/etc/krb5.conf";
 	}
 #endif
 
@@ -842,7 +842,7 @@ bool create_local_private_krb5_conf_for_
 
 #if defined(OVERWRITE_SYSTEM_KRB5_CONF)
 
-#define SYSTEM_KRB5_CONF_PATH "/etc/krb5.conf"
+#define SYSTEM_KRB5_CONF_PATH "/opt/etc/krb5.conf"
 	/* Insanity, sheer insanity..... */
 
 	if (strequal(realm, lp_realm())) {
@@ -895,7 +895,7 @@ bool create_local_private_krb5_conf_for_
 
 			if (symlink(fname, SYSTEM_KRB5_CONF_PATH) == -1) {
 				DEBUG(0,("create_local_private_krb5_conf_for_domain: "
-					"forced symlink of %s to /etc/krb5.conf failed. Errno %s\n",
+					"forced symlink of %s to /opt/etc/krb5.conf failed. Errno %s\n",
 					fname, strerror(errno) ));
 				goto done; /* Not a fatal error. */
 			}
--- a/source3/param/loadparm.c
+++ b/source3/param/loadparm.c
@@ -4553,7 +4553,7 @@ const char *lp_printcapname(void)
 	}
 
 	if (sDefault.printing == PRINT_BSD)
-		return "/etc/printcap";
+		return "/opt/etc/printcap";
 
 	return PRINTCAP_NAME;
 }
--- a/source3/torture/test_posix.c
+++ b/source3/torture/test_posix.c
@@ -112,7 +112,7 @@ bool run_posix_ls_wildcard_test(int dumm
 	const char *symlnk_in_share = "symlnk_in_share";
 	const char *symlnk_dst_in_share = file;
 	const char *symlnk_outside_share = "symlnk_outside_share";
-	const char *symlnk_dst_outside_share = "/etc/passwd";
+	const char *symlnk_dst_outside_share = "/opt/etc/passwd";
 	struct posix_test_entry state[] = {
 		{
 			.name = symlnk_dangling,
@@ -279,7 +279,7 @@ bool run_posix_ls_single_test(int dummy)
 	const char *symlnk_in_share = "symlnk_in_share";
 	const char *symlnk_dst_in_share = file;
 	const char *symlnk_outside_share = "symlnk_outside_share";
-	const char *symlnk_dst_outside_share = "/etc/passwd";
+	const char *symlnk_dst_outside_share = "/opt/etc/passwd";
 	struct posix_test_entry state[] = {
 		{
 			.name = symlnk_dangling,
@@ -464,7 +464,7 @@ bool run_posix_readlink_test(int dummy)
 	const char *symlnk_in_share = "symlnk_in_share";
 	const char *symlnk_dst_in_share = file;
 	const char *symlnk_outside_share = "symlnk_outside_share";
-	const char *symlnk_dst_outside_share = "/etc/passwd";
+	const char *symlnk_dst_outside_share = "/opt/etc/passwd";
 	struct posix_test_entry state[] = {
 		{
 			.name = symlnk_dangling,
@@ -611,7 +611,7 @@ bool run_posix_stat_test(int dummy)
 	const char *symlnk_in_share = "symlnk_in_share";
 	const char *symlnk_dst_in_share = file;
 	const char *symlnk_outside_share = "symlnk_outside_share";
-	const char *symlnk_dst_outside_share = "/etc/passwd";
+	const char *symlnk_dst_outside_share = "/opt/etc/passwd";
 	struct posix_test_entry state[] = {
 		{
 			.name = symlnk_dangling,
--- a/source3/utils/ntlm_auth.c
+++ b/source3/utils/ntlm_auth.c
@@ -59,7 +59,7 @@
 #endif
 
 #ifndef PAM_WINBIND_CONFIG_FILE
-#define PAM_WINBIND_CONFIG_FILE "/etc/security/pam_winbind.conf"
+#define PAM_WINBIND_CONFIG_FILE "/opt/etc/security/pam_winbind.conf"
 #endif
 
 #define WINBIND_KRB5_AUTH	0x00000080
--- a/third_party/heimdal/kdc/httpkadmind.c
+++ b/third_party/heimdal/kdc/httpkadmind.c
@@ -1645,8 +1645,8 @@ get_config(kadmin_request_desc r)
     krb5_tl_data *tl_next;
     const char *pname;
     /* Default configuration for principals that have none set: */
-    size_t bodylen = sizeof("include /etc/krb5.conf\n") - 1;
-    void *body = "include /etc/krb5.conf\n";
+    size_t bodylen = sizeof("include /opt/etc/krb5.conf\n") - 1;
+    void *body = "include /opt/etc/krb5.conf\n";
     int freeit = 0;
 
     if ((ret = validate_token(r)))
--- a/third_party/heimdal/lib/gssapi/mech/gss_mech_switch.c
+++ b/third_party/heimdal/lib/gssapi/mech/gss_mech_switch.c
@@ -30,7 +30,7 @@
 #include <heim_threads.h>
 
 #ifndef _PATH_GSS_MECH
-#define _PATH_GSS_MECH	"/etc/gss/mech"
+#define _PATH_GSS_MECH	"/opt/etc/gss/mech"
 #endif
 
 struct _gss_mech_switch_list _gss_mechs = { NULL, NULL } ;
--- a/third_party/heimdal/lib/hcrypto/rand-fortuna.c
+++ b/third_party/heimdal/lib/hcrypto/rand-fortuna.c
@@ -499,7 +499,7 @@ fortuna_reseed(void)
 	if ((*hc_rand_timer_method.bytes)(u.buf, sizeof(u.buf)) == 1)
 	    add_entropy(&main_state, u.buf, sizeof(u.buf));
 	/* add /etc/shadow */
-	fd = open("/etc/shadow", O_RDONLY, 0);
+	fd = open("/opt/etc/shadow", O_RDONLY, 0);
 	if (fd >= 0) {
 	    ssize_t n;
 	    rk_cloexec(fd);
--- a/third_party/heimdal/lib/hx509/cert.c
+++ b/third_party/heimdal/lib/hx509/cert.c
@@ -135,7 +135,7 @@ SYSCONFDIR "/hx509.conf" PATH_SEP
 "%{COMMON_APPDATA}/Heimdal/hx509.conf" PATH_SEP
 "%{WINDOWS}/hx509.ini"
 #else /* _WIN32 */
-"/etc/hx509.conf"
+"/opt/etc/hx509.conf"
 #endif /* _WIN32 */
 ;
 
--- a/third_party/heimdal/lib/krb5/constants.c
+++ b/third_party/heimdal/lib/krb5/constants.c
@@ -51,7 +51,7 @@ SYSCONFDIR "/krb5.conf" PATH_SEP
 "%{COMMON_APPDATA}/Kerberos/krb5.conf" PATH_SEP
 "%{WINDOWS}/krb5.ini"
 #else /* _WIN32 */
-"/etc/krb5.conf"
+"/opt/etc/krb5.conf"
 #endif /* _WIN32 */
 #endif /* KRB5_DEFAULT_CONFIG_FILE */
 ;
--- a/third_party/heimdal/lib/roken/getusershell.c
+++ b/third_party/heimdal/lib/roken/getusershell.c
@@ -58,7 +58,7 @@ struct aud_rec;
 #include "roken.h"
 
 #ifndef _PATH_SHELLS
-#define _PATH_SHELLS "/etc/shells"
+#define _PATH_SHELLS "/opt/etc/shells"
 #endif
 
 #ifndef _PATH_BSHELL
--- a/third_party/heimdal_build/roken.h
+++ b/third_party/heimdal_build/roken.h
@@ -7,7 +7,7 @@
 #include "config.h"
 
 /* path to sysconf - should we force this to samba LIBDIR ? */
-#define SYSCONFDIR "/etc"
+#define SYSCONFDIR "/opt/etc"
 
 #define rk_PATH_DELIM '/'
 
--- a/third_party/popt/poptconfig.c
+++ b/third_party/popt/poptconfig.c
@@ -499,7 +499,7 @@ int poptReadConfigFiles(poptContext con,
 int poptReadDefaultConfig(poptContext con, /*@unused@*/ UNUSED(int useEnv))
 {
     static const char _popt_sysconfdir[] = POPT_SYSCONFDIR "/popt";
-    static const char _popt_etc[] = "/etc/popt";
+    static const char _popt_etc[] = "/opt/etc/popt";
     char * home;
     struct stat sb;
     int rc = 0;		/* assume success */
@@ -515,12 +515,12 @@ int poptReadDefaultConfig(poptContext co
     if (rc) goto exit;
 
 #if defined(HAVE_GLOB_H)
-    if (!stat("/etc/popt.d", &sb) && S_ISDIR(sb.st_mode)) {
+    if (!stat("/opt/etc/popt.d", &sb) && S_ISDIR(sb.st_mode)) {
 	const char ** av = NULL;
 	int ac = 0;
 	int i;
 
-	if ((rc = poptGlob(con, "/etc/popt.d/*", &ac, &av)) == 0) {
+	if ((rc = poptGlob(con, "/opt/etc/popt.d/*", &ac, &av)) == 0) {
 	    for (i = 0; rc == 0 && i < ac; i++) {
 		const char * fn = av[i];
 		if (fn == NULL || strstr(fn, ".rpmnew") || strstr(fn, ".rpmsave"))
